{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","setState","console","info","toLocaleTimeString","props","name","debug","clearInterval","className","Component","App","hasClock","clockName","document","addEventListener","event","preventDefault","value","now","toString","slice","getRandomName","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAML,EAAQ,IAAIC,KAElB,EAAKK,SAAS,CAAEN,UAEhBO,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,wBAC7B,OAdP,gCAiBE,SAAmBC,GACbA,EAAMC,OAASR,KAAKO,MAAMC,MAE5BJ,QAAQK,MAAR,uBAA8BF,EAAMC,KAApC,eAA+CR,KAAKO,MAAMC,SApBhE,kCAwBE,WACEP,OAAOS,cAAcV,KAAKD,WAzB9B,oBA4BE,WACE,IACEF,EACEG,KAAKJ,MADPC,MAGF,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGX,KAAKO,MAAMC,OAEb,YACD,sBAAMG,UAAU,cAAhB,SACGd,EAAMS,8BAxCjB,GAA2BM,a,MCKpB,IAAMC,EAAb,4MACEjB,MAAe,CACbkB,UAAU,EACVC,UAAW,WAHf,uDAME,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,WACjC,EAAKd,SAAS,CAAEW,UAAU,OAG5BE,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKhB,SAAS,CAAEW,UAAU,OAG5Bb,OAAOC,aAAY,WACjB,IAAMa,EA5BZ,WACE,IAAMK,EAAQtB,KAAKuB,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAyBMI,GAElB,EAAKrB,SAAS,CAAEY,gBACf,QApBP,oBAuBE,WACE,OAEE,sBAAKJ,UAAU,MAAf,UACE,6CACCX,KAAKJ,MAAMkB,UAAY,cAAC,EAAD,CAAON,KAAMR,KAAKJ,MAAMmB,mBA5BxD,GAAyBH,aCZzBa,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,W","file":"static/js/main.e1cd66fd.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  today: Date,\n};\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: State = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const today = new Date();\n\n      this.setState({ today });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(props: Props) {\n    if (props.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.debug(`Renamed from ${props.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const {\n      today,\n    } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {today.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount() {\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    window.setInterval(() => {\n      const clockName = getRandomName();\n\n      this.setState({ clockName });\n    }, 3300);\n  }\n\n  render() {\n    return (\n\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}